//
// Created by luka on 04/01/25.
//

#ifndef SPRITEFONTMANAGER_H
#define SPRITEFONTMANAGER_H

#define DEFAULT_FONT_PATH "content/spritefonts/sans-serif.xml"

#include "core/fonts/SpriteFont.h"

namespace mars {

    class Framework;

    //! The SpriteFontManager class.
    class SpriteFontManager {

    public:
        //! Construct a new SpriteFontManager object.
        //! @param framework The framework.
        explicit SpriteFontManager(Framework& framework);

        //! Gets the state.
        //! @return The state.
        [[nodiscard]] State getState() const { return state; }

        //! Gets the default loaded font.
        //! @return The default loaded font.
        std::shared_ptr<SpriteFont> getDefaultFont();

        //! Initialize the sprite font manager.
        void initialize();

        //! Gets or loads a snowb sprite font.
        //! These fonts are generated by the snowb font generator.
        //! For more <a href="https://snowb.org/">snowb.org</a>.
        //! @param xmlPath The path to the xml file.
        //! @param texturePath The path to the texture file. If not passed or empty tries to get texture path from xml document. By default, it's empty.
        //! @return The sprite font.
        std::shared_ptr<SpriteFont> getSnowBSpriteFont(const std::string &xmlPath, const std::string &texturePath = "");

        //! Destroy the sprite font manager.
        void destroy();

    private:
        Framework& framework;
        State state;
        std::map<std::string, std::shared_ptr<SpriteFont>> fonts;
    };

}



#endif //SPRITEFONTMANAGER_H
